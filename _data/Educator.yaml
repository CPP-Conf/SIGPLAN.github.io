2023:
- Awardee: Kathi Fisler and Shriram Krishnamurthi
  Citation: |

    Professors Fisler and Krishnamurthi have made significant and
    sustained pedagogical contributions to Programming Languages over
    the last two decades. Both of them have a long track record of
    being SIGPLAN community leaders in PL education, from writing
    well-known textbooks to making significant contributions to CS
    Curriculum Guidelines. .. With Emmanuel Schanzer, they are
    co-founders of Bootstrap, a national program that uses functional
    programming to integrate data science and computing into math,
    science, and social studies classes. …  In short, their innovative
    work has paved the way for a new generation of computer scientists
    and teachers and has helped to make computing education more
    accessible, engaging, and effective for all.

    * Selection committee: Işil Dillig, Graham Hutton, Alastair Donaldson, Elisa Gonzalez Boix, Jeremy Gibbons

2021:
- Awardee: Benjamin Pierce
  Citation: |
    Benjamin Pierce is an absolutely exceptional educator and mentor. Benjamin
    is passionate about providing students with the clearest explanations and
    the most insight-provoking exercises, and he works tirelessly to produce
    them.  Benjamin's contributions to programming languages education are truly
    inspiring, both to students who use his books, and to teachers. His Types
    and Programming Languages book covering untyped lambda calculus to System F,
    subtyping, objects, mutable state, and recursive types, published in 2002,
    is widely used in advanced undergraduate and graduate-level courses. The
    books published prior to Benjamin’s are targeted at a more mathematical
    audience; Benjamin’s starts with programmers. Its successor, Advanced Types
    and Programming Languages, edited by Benjamin, dives deeper into:
    substructural logic, logical relations, dependent types, module systems,
    and type inference.  Together these textbooks present the very
    foundations of programming languages research in a beautifully written and
    accessible way. More recently, Benjamin's educational contributions have
    shifted online, to the novel, and very successful, Software Foundations
    series.  These volumes, again written with clarity and great
    accessibility, explain the foundations of logic and programming languages
    semantics through the lens of formal verification.  Part textbook and part
    interactive proof-script, they use the Coq theorem prover as a vehicle for
    students to learn about propositional logic, induction principles, Hoare
    logic, and lambda calculus, among many other topics.  Initiated as a
    course offered at the University of Pennsylvania, the Software Foundations
    has grown into a collaborative, multi-institution community effort.
    Benjamin is also a kind and attentive mentor, and generous and encouraging
    to students via events like the DeepSpec summer school, and the PL
    Mentoring Workshops.
